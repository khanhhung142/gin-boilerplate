{
    "swagger": "2.0",
    "info": {
        "description": "Hung.Phan apply for junior Golang developer position at EMVN",
        "title": "EMVN API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/signin": {
            "post": {
                "description": "Sign in user, return token and exp time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in user",
                "parameters": [
                    {
                        "description": "Sign in user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_controller.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth_controller.SignInOutput"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Sign up new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up new user",
                "parameters": [
                    {
                        "description": "Sign up new user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_controller.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth_controller.SignUpOutput"
                        }
                    }
                }
            }
        },
        "/music_track/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new music track with the given information. Must upload the track file separately",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Music Track"
                ],
                "summary": "Create a new music track",
                "parameters": [
                    {
                        "description": "Music track information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/musictrack_controller.WriteMusicTrackInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/musictrack_controller.WriteMusicTrackOutput"
                        }
                    }
                }
            }
        },
        "/music_track/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a music track by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Music Track"
                ],
                "summary": "Delete a music track",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Music track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/musictrack_controller.TempOut"
                        }
                    }
                }
            }
        },
        "/music_track/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a music track by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Music Track"
                ],
                "summary": "Get a music track by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Music track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MusicTrack"
                        }
                    }
                }
            }
        },
        "/music_track/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search music tracks based on the provided criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Music Track"
                ],
                "summary": "Search music tracks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist name",
                        "name": "artist",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Album name",
                        "name": "album",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Genre",
                        "name": "genre",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MusicTrack"
                            }
                        }
                    }
                }
            }
        },
        "/music_track/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a music track with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Music Track"
                ],
                "summary": "Update a music track",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Music track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Music track information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/musictrack_controller.WriteMusicTrackInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/musictrack_controller.WriteMusicTrackOutput"
                        }
                    }
                }
            }
        },
        "/music_track/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload a music track file",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Music Track"
                ],
                "summary": "Upload a music track",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Music track file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/musictrack_controller.UploadTrackOutput"
                        }
                    }
                }
            }
        },
        "/playlist/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Note that all track ids must be valid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Create a new playlist",
                "parameters": [
                    {
                        "description": "Playlist information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist_controller.WritePlaylistInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist_controller.WritePlaylistOutput"
                        }
                    }
                }
            }
        },
        "/playlist/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a playlist by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Delete a playlist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist_controller.TempOut"
                        }
                    }
                }
            }
        },
        "/playlist/get/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a playlist by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Get a playlist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist_controller.WritePlaylistOutput"
                        }
                    }
                }
            }
        },
        "/playlist/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search playlists based on title, description, and genre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Search playlists based on criteria",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Playlist description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Playlist genre",
                        "name": "genre",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Playlist"
                            }
                        }
                    }
                }
            }
        },
        "/playlist/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a playlist by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Playlist"
                ],
                "summary": "Update a playlist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Playlist information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist_controller.WritePlaylistInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist_controller.WritePlaylistOutput"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth_controller.SignInInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                }
            }
        },
        "auth_controller.SignInOutput": {
            "type": "object",
            "properties": {
                "exp_time": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth_controller.SignUpInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 8
                }
            }
        },
        "auth_controller.SignUpOutput": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.MusicTrack": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "description": "URL or local file path, get from storage",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "model.Playlist": {
            "type": "object",
            "properties": {
                "created_by": {
                    "description": "uid of the user who created the playlist",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "track_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "musictrack_controller.TempOut": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "musictrack_controller.UploadTrackOutput": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string"
                }
            }
        },
        "musictrack_controller.WriteMusicTrackInput": {
            "type": "object",
            "required": [
                "album",
                "artist",
                "duration",
                "genre",
                "link",
                "title",
                "year"
            ],
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer",
                    "minimum": 1
                },
                "genre": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "musictrack_controller.WriteMusicTrackOutput": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "description": "URL or local file path, get from storage",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "playlist_controller.TempOut": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "playlist_controller.WritePlaylistInput": {
            "type": "object",
            "required": [
                "description",
                "genre",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "track_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "playlist_controller.WritePlaylistOutput": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MusicTrack"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}